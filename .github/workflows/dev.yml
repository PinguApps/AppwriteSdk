name: Dev

on:
  push:
    branches: [ dev ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    uses: ./.github/workflows/_test.yml
    secrets: inherit
    permissions:
      pull-requests: write
      contents: read
      issues: read
      checks: write

  todos:
    name: Convert Todos to Issues
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "TODO to Issue"
        uses: "alstr/todo-to-issue-action@973393389c53206cc1f317f9ae6d316ec1ac5f93" # v5
        with:
          INSERT_ISSUE_URLS: true
          AUTO_ASSIGN: true
          CLOSE_ISSUES: true
      - name: Set Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit and Push Changes
        run: |
          git add -A
          if [[ `git status --porcelain` ]]; then
            git commit -m "Automatically added GitHub issue links to TODOs"
            git push origin main
          else
            echo "No changes to commit"
          fi


  release:
    name: Push to main
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        ref: dev

    - name: Get Release Version
      id: releaseVersion
      run: |
        arrTag=(${GITHUB_REF//\// })
        VERSION="${arrTag[2]}"
        echo Version: $VERSION
        VERSION="${VERSION:1}"
        echo Clean Version: $VERSION
        echo "version=$VERSION" >> ${GITHUB_OUTPUT}

    - name: Create Pull Request
      id: cpr
      env:
        GH_TOKEN: ${{ secrets.PAT }}
      run: |
        git fetch origin main
        pr_number=$(gh pr create --base main --head dev --assignee pingu2k4 --fill --label automated --label release --title "Merge v${{ steps.releaseVersion.outputs.version }}" | grep -o 'https://github.com/[^/]\+/[^/]\+/pull/\([0-9]\+\)' | awk -F '/' '{print $NF}')
        echo PR Number: $pr_number
        echo "prNumber=$pr_number" >> ${GITHUB_OUTPUT}

    - name: Merge Pull Request
      if: ${{ steps.cpr.outputs.prNumber }}
      env:
        GH_TOKEN: ${{ secrets.PAT }}
      run: |
        gh pr merge ${{ steps.cpr.outputs.prNumber }} --auto --merge
